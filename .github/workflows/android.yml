name: Build & Publish Release APK

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SIGNING_KEYSTORE_PATH: ~/.android/keystore.jks
      SIGNING_KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    steps:
      # 1️⃣ 检出代码
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 确保有 .git 目录

      # 2️⃣ 设置 JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      # 3️⃣ 解码 keystore 文件
      - name: Decode keystore
        run: |
          mkdir -p ~/.android
          echo "${{ secrets.SIGNING_KEYSTORE_B64 }}" | base64 --decode > ~/.android/keystore.jks

      # 4️⃣ 设置 Gradle 缓存
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # 5️⃣ 设置 Gradle 可执行权限
      - name: Make Gradle executable
        run: chmod +x ./gradlew

      # 6️⃣ 构建 Release APK
      - name: Build Release APK
        run: ./gradlew clean assembleRelease

      # 7️⃣ 检查 APK 文件
      - name: Check APK size
        run: ls -lh app/build/outputs/apk/release/

      # 8️⃣ 发布 Release
      - name: Publish Release APK
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

